#ifndef HANDLES_CEVENT_HPP_
#define HANDLES_CEVENT_HPP_

#include <cstdint>
#include <handles/CMeanTimeToHappen.hpp>
#include <handles/CTrigger.hpp>
#include <handles/basic_string.hpp>
#include <handles/ObjectReference.hpp>
#include <handles/vector.hpp>

#pragma pack(push, 1)

namespace smedley
{
namespace handles
{

struct CEventOption;

struct CEvent
{
	void **vftable;
	uint8_t field1_0x4;
	uint8_t field2_0x5;
	uint8_t field3_0x6;
	uint8_t field4_0x7;
	ObjectReference ref;
	uint8_t field6_0x10;
	uint8_t field7_0x11;
	uint8_t field8_0x12;
	uint8_t field9_0x13;
	uint8_t field10_0x14;
	uint8_t field11_0x15;
	uint8_t field12_0x16;
	uint8_t field13_0x17;
	uint8_t field14_0x18;
	uint8_t field15_0x19;
	uint8_t field16_0x1a;
	uint8_t field17_0x1b;
	uint8_t field18_0x1c;
	uint8_t field19_0x1d;
	uint8_t field20_0x1e;
	uint8_t field21_0x1f;
	uint8_t field22_0x20;
	uint8_t field23_0x21;
	uint8_t field24_0x22;
	uint8_t field25_0x23;
	uint8_t field26_0x24;
	uint8_t field27_0x25;
	uint8_t field28_0x26;
	uint8_t field29_0x27;
	uint8_t field30_0x28;
	uint8_t field31_0x29;
	uint8_t field32_0x2a;
	uint8_t field33_0x2b;
	uint8_t field34_0x2c;
	uint8_t field35_0x2d;
	uint8_t field36_0x2e;
	uint8_t field37_0x2f;
	CTrigger trigger;
	uint8_t field39_0x48;
	uint8_t field40_0x49;
	uint8_t field41_0x4a;
	uint8_t field42_0x4b;
	uint8_t field43_0x4c;
	uint8_t field44_0x4d;
	uint8_t field45_0x4e;
	uint8_t field46_0x4f;
	uint8_t field47_0x50;
	uint8_t field48_0x51;
	uint8_t field49_0x52;
	uint8_t field50_0x53;
	uint8_t field51_0x54;
	uint8_t field52_0x55;
	uint8_t field53_0x56;
	uint8_t field54_0x57;
	uint8_t field55_0x58;
	uint8_t field56_0x59;
	uint8_t field57_0x5a;
	uint8_t field58_0x5b;
	uint8_t field59_0x5c;
	uint8_t field60_0x5d;
	uint8_t field61_0x5e;
	uint8_t field62_0x5f;
	uint8_t field63_0x60;
	uint8_t field64_0x61;
	uint8_t field65_0x62;
	uint8_t field66_0x63;
	uint8_t field67_0x64;
	uint8_t field68_0x65;
	uint8_t field69_0x66;
	uint8_t field70_0x67;
	uint8_t field71_0x68;
	uint8_t field72_0x69;
	uint8_t field73_0x6a;
	uint8_t field74_0x6b;
	uint8_t field75_0x6c;
	uint8_t field76_0x6d;
	uint8_t field77_0x6e;
	uint8_t field78_0x6f;
	uint8_t field79_0x70;
	uint8_t field80_0x71;
	uint8_t field81_0x72;
	uint8_t field82_0x73;
	uint8_t field83_0x74;
	uint8_t field84_0x75;
	uint8_t field85_0x76;
	uint8_t field86_0x77;
	uint8_t field87_0x78;
	uint8_t field88_0x79;
	uint8_t field89_0x7a;
	uint8_t field90_0x7b;
	uint8_t field91_0x7c;
	uint8_t field92_0x7d;
	uint8_t field93_0x7e;
	uint8_t field94_0x7f;
	uint8_t field95_0x80;
	uint8_t field96_0x81;
	uint8_t field97_0x82;
	uint8_t field98_0x83;
	uint8_t field99_0x84;
	uint8_t field100_0x85;
	uint8_t field101_0x86;
	uint8_t field102_0x87;
	uint8_t field103_0x88;
	uint8_t field104_0x89;
	uint8_t field105_0x8a;
	uint8_t field106_0x8b;
	uint8_t field107_0x8c;
	uint8_t field108_0x8d;
	uint8_t field109_0x8e;
	uint8_t field110_0x8f;
	uint8_t field111_0x90;
	uint8_t field112_0x91;
	uint8_t field113_0x92;
	uint8_t field114_0x93;
	uint8_t field115_0x94;
	uint8_t field116_0x95;
	uint8_t field117_0x96;
	uint8_t field118_0x97;
	uint8_t field119_0x98;
	uint8_t field120_0x99;
	uint8_t field121_0x9a;
	uint8_t field122_0x9b;
	uint8_t field123_0x9c;
	uint8_t field124_0x9d;
	uint8_t field125_0x9e;
	uint8_t field126_0x9f;
	uint8_t field127_0xa0;
	uint8_t field128_0xa1;
	uint8_t field129_0xa2;
	uint8_t field130_0xa3;
	uint8_t field131_0xa4;
	uint8_t field132_0xa5;
	uint8_t field133_0xa6;
	uint8_t field134_0xa7;
	uint8_t field135_0xa8;
	uint8_t field136_0xa9;
	uint8_t field137_0xaa;
	uint8_t field138_0xab;
	uint8_t field139_0xac;
	uint8_t field140_0xad;
	uint8_t field141_0xae;
	uint8_t field142_0xaf;
	vector<CEventOption *> options;
	CMeanTimeToHappen meanTimeToHappen;
	basic_string<char> title;
	basic_string<char> newsTitle;
	basic_string<char> description;
	basic_string<char> newsDescLong;
	basic_string<char> newsDescMedium;
	basic_string<char> newsDescShort;
	basic_string<char> picture;
	bool isTriggeredOnly;
	uint8_t field153_0x1a1;
	bool isMajor;
	bool fireOnlyOnce;
	bool isElectionEvent;
	bool news;
	uint8_t field158_0x1a6;
	uint8_t field159_0x1a7;
	basic_string<char> issueGroup;
};

}
}

#pragma pack(pop)

#endif // HANDLES_CEVENT_HPP_
