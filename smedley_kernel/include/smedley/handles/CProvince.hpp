#ifndef HANDLES_CPROVINCE_HPP_
#define HANDLES_CPROVINCE_HPP_

#include <cstdint>
#include "CCountryTag.hpp"
#include "CUniqueUnitName.hpp"
#include "CFlags.hpp"
#include "CArray.hpp"
#include "CProvinceModifier.hpp"
#include "CStaticModifier.hpp"
#include "CList.hpp"
#include "CProvinceHistory.hpp"
#include "CEU3Date.hpp"
#include "vector.hpp"
#include "CPopList.hpp"

#pragma pack(push, 1)

namespace smedley
{
namespace handles
{

struct CInGameIdler;
struct CProvinceTemplate;
struct CProvinceBuilding;
struct CEvent;
struct CPop;
struct CState;
struct CCrime;

struct CProvince
{
	void **CPersistent_vftable;
	uint8_t field1_0x4;
	uint8_t field2_0x5;
	uint8_t field3_0x6;
	uint8_t field4_0x7;
	void **CSelectable_vftable;
	char field6_0xc;
	uint8_t field7_0xd;
	uint8_t field8_0xe;
	uint8_t field9_0xf;
	uint8_t field10_0x10;
	uint8_t field11_0x11;
	uint8_t field12_0x12;
	uint8_t field13_0x13;
	vector<CEvent *> events;
	uint8_t field15_0x24;
	uint8_t field16_0x25;
	uint8_t field17_0x26;
	uint8_t field18_0x27;
	uint8_t field19_0x28;
	uint8_t field20_0x29;
	uint8_t field21_0x2a;
	uint8_t field22_0x2b;
	uint8_t field23_0x2c;
	uint8_t field24_0x2d;
	uint8_t field25_0x2e;
	uint8_t field26_0x2f;
	uint8_t field27_0x30;
	uint8_t field28_0x31;
	uint8_t field29_0x32;
	uint8_t field30_0x33;
	uint8_t field31_0x34;
	uint8_t field32_0x35;
	uint8_t field33_0x36;
	uint8_t field34_0x37;
	uint8_t nationalism__;
	uint8_t field36_0x39;
	uint8_t field37_0x3a;
	uint8_t field38_0x3b;
	uint8_t field39_0x3c;
	uint8_t field40_0x3d;
	uint8_t field41_0x3e;
	uint8_t field42_0x3f;
	uint8_t field43_0x40;
	uint8_t field44_0x41;
	uint8_t field45_0x42;
	uint8_t field46_0x43;
	uint8_t field47_0x44;
	uint8_t field48_0x45;
	uint8_t field49_0x46;
	uint8_t field50_0x47;
	uint8_t field51_0x48;
	uint8_t field52_0x49;
	uint8_t field53_0x4a;
	uint8_t field54_0x4b;
	uint8_t field55_0x4c;
	uint8_t field56_0x4d;
	uint8_t field57_0x4e;
	uint8_t field58_0x4f;
	uint8_t field59_0x50;
	uint8_t field60_0x51;
	uint8_t field61_0x52;
	uint8_t field62_0x53;
	CInGameIdler * idler;
	int id;
	CProvinceTemplate * provTemplate;
	CProvinceHistory history;
	CProvinceModifier modifier;
	uint8_t field68_0xb4;
	uint8_t field69_0xb5;
	uint8_t field70_0xb6;
	uint8_t field71_0xb7;
	uint32_t field72_0xb8;
	uint32_t field73_0xbc;
	uint32_t field74_0xc0;
	uint8_t field75_0xc4;
	uint8_t field76_0xc5;
	uint8_t field77_0xc6;
	uint8_t field78_0xc7;
	uint32_t field79_0xc8;
	uint32_t field80_0xcc;
	uint32_t field81_0xd0;
	uint8_t field82_0xd4;
	uint8_t field83_0xd5;
	uint8_t field84_0xd6;
	uint8_t field85_0xd7;
	uint32_t field86_0xd8;
	uint32_t field87_0xdc;
	uint32_t field88_0xe0;
	uint8_t field89_0xe4;
	uint8_t field90_0xe5;
	uint8_t field91_0xe6;
	uint8_t field92_0xe7;
	uint8_t field93_0xe8;
	uint8_t field94_0xe9;
	uint8_t field95_0xea;
	uint8_t field96_0xeb;
	CList<void *> unitsOrLeaders__;
	uint32_t field98_0xfc;
	uint32_t field99_0x100;
	uint32_t field100_0x104;
	uint8_t field101_0x108;
	uint8_t field102_0x109;
	uint8_t field103_0x10a;
	uint8_t field104_0x10b;
	uint8_t field105_0x10c;
	uint8_t field106_0x10d;
	uint8_t field107_0x10e;
	uint8_t field108_0x10f;
	uint8_t field109_0x110;
	uint8_t field110_0x111;
	uint8_t field111_0x112;
	uint8_t field112_0x113;
	int garrison;
	vector<CProvinceBuilding *> buildings;
	CCountryTag owner;
	CCountryTag controller;
	uint32_t field117_0x138;
	uint32_t field118_0x13c;
	uint32_t field119_0x140;
	uint8_t field120_0x144;
	uint8_t field121_0x145;
	uint8_t field122_0x146;
	uint8_t field123_0x147;
	vector<CCountryTag> coreTags;
	uint8_t field125_0x158;
	uint8_t field126_0x159;
	uint8_t field127_0x15a;
	uint8_t field128_0x15b;
	uint32_t field129_0x15c;
	uint32_t field130_0x160;
	uint32_t field131_0x164;
	uint8_t field132_0x168;
	uint8_t field133_0x169;
	uint8_t field134_0x16a;
	uint8_t field135_0x16b;
	uint8_t field136_0x16c;
	uint8_t field137_0x16d;
	uint8_t field138_0x16e;
	uint8_t field139_0x16f;
	uint8_t field140_0x170;
	uint8_t field141_0x171;
	uint8_t field142_0x172;
	uint8_t field143_0x173;
	CArray<int> visibility;
	uint8_t field145_0x17c;
	uint8_t field146_0x17d;
	uint8_t field147_0x17e;
	uint8_t field148_0x17f;
	uint8_t field149_0x180;
	uint8_t field150_0x181;
	uint8_t field151_0x182;
	uint8_t field152_0x183;
	uint8_t field153_0x184;
	uint8_t field154_0x185;
	uint8_t field155_0x186;
	uint8_t field156_0x187;
	CState * state;
	uint8_t field158_0x18c;
	uint8_t field159_0x18d;
	uint8_t field160_0x18e;
	uint8_t field161_0x18f;
	int colonial;
	vector<CPopList> pops;
	int lifeRating;
	uint8_t popCount;
	uint8_t field166_0x1a9;
	uint8_t field167_0x1aa;
	uint8_t field168_0x1ab;
	uint8_t field169_0x1ac;
	uint8_t field170_0x1ad;
	uint8_t field171_0x1ae;
	uint8_t field172_0x1af;
	uint8_t field173_0x1b0;
	uint8_t field174_0x1b1;
	uint8_t field175_0x1b2;
	uint8_t field176_0x1b3;
	uint8_t field177_0x1b4;
	uint8_t field178_0x1b5;
	uint8_t field179_0x1b6;
	uint8_t field180_0x1b7;
	uint8_t field181_0x1b8;
	uint8_t field182_0x1b9;
	uint8_t field183_0x1ba;
	uint8_t field184_0x1bb;
	uint8_t field185_0x1bc;
	uint8_t field186_0x1bd;
	uint8_t field187_0x1be;
	uint8_t field188_0x1bf;
	uint8_t field189_0x1c0;
	uint8_t field190_0x1c1;
	uint8_t field191_0x1c2;
	uint8_t field192_0x1c3;
	uint8_t field193_0x1c4;
	uint8_t field194_0x1c5;
	uint8_t field195_0x1c6;
	uint8_t field196_0x1c7;
	uint8_t field197_0x1c8;
	uint8_t field198_0x1c9;
	uint8_t field199_0x1ca;
	uint8_t field200_0x1cb;
	uint8_t field201_0x1cc;
	uint8_t field202_0x1cd;
	uint8_t field203_0x1ce;
	uint8_t field204_0x1cf;
	uint8_t field205_0x1d0;
	uint8_t field206_0x1d1;
	uint8_t field207_0x1d2;
	uint8_t field208_0x1d3;
	uint8_t field209_0x1d4;
	uint8_t field210_0x1d5;
	uint8_t field211_0x1d6;
	uint8_t field212_0x1d7;
	uint8_t field213_0x1d8;
	uint8_t field214_0x1d9;
	uint8_t field215_0x1da;
	uint8_t field216_0x1db;
	uint8_t field217_0x1dc;
	uint8_t field218_0x1dd;
	uint8_t field219_0x1de;
	uint8_t field220_0x1df;
	uint8_t field221_0x1e0;
	uint8_t field222_0x1e1;
	uint8_t field223_0x1e2;
	uint8_t field224_0x1e3;
	uint8_t field225_0x1e4;
	uint8_t field226_0x1e5;
	uint8_t field227_0x1e6;
	uint8_t field228_0x1e7;
	uint8_t field229_0x1e8;
	uint8_t field230_0x1e9;
	uint8_t field231_0x1ea;
	uint8_t field232_0x1eb;
	uint8_t field233_0x1ec;
	uint8_t field234_0x1ed;
	uint8_t field235_0x1ee;
	uint8_t field236_0x1ef;
	uint8_t field237_0x1f0;
	uint8_t field238_0x1f1;
	uint8_t field239_0x1f2;
	uint8_t field240_0x1f3;
	uint8_t field241_0x1f4;
	uint8_t field242_0x1f5;
	uint8_t field243_0x1f6;
	uint8_t field244_0x1f7;
	uint8_t field245_0x1f8;
	uint8_t field246_0x1f9;
	uint8_t field247_0x1fa;
	uint8_t field248_0x1fb;
	uint8_t field249_0x1fc;
	uint8_t field250_0x1fd;
	uint8_t field251_0x1fe;
	uint8_t field252_0x1ff;
	uint8_t field253_0x200;
	uint8_t field254_0x201;
	uint8_t field255_0x202;
	uint8_t field256_0x203;
	uint8_t field257_0x204;
	uint8_t field258_0x205;
	uint8_t field259_0x206;
	uint8_t field260_0x207;
	uint8_t field261_0x208;
	uint8_t field262_0x209;
	uint8_t field263_0x20a;
	uint8_t field264_0x20b;
	uint8_t field265_0x20c;
	uint8_t field266_0x20d;
	uint8_t field267_0x20e;
	uint8_t field268_0x20f;
	uint8_t field269_0x210;
	uint8_t field270_0x211;
	uint8_t field271_0x212;
	uint8_t field272_0x213;
	uint8_t field273_0x214;
	uint8_t field274_0x215;
	uint8_t field275_0x216;
	uint8_t field276_0x217;
	uint8_t field277_0x218;
	uint8_t field278_0x219;
	uint8_t field279_0x21a;
	uint8_t field280_0x21b;
	uint8_t field281_0x21c;
	uint8_t field282_0x21d;
	uint8_t field283_0x21e;
	uint8_t field284_0x21f;
	uint8_t field285_0x220;
	uint8_t field286_0x221;
	uint8_t field287_0x222;
	uint8_t field288_0x223;
	uint8_t field289_0x224;
	uint8_t field290_0x225;
	uint8_t field291_0x226;
	uint8_t field292_0x227;
	uint8_t field293_0x228;
	uint8_t field294_0x229;
	uint8_t field295_0x22a;
	uint8_t field296_0x22b;
	uint8_t field297_0x22c;
	uint8_t field298_0x22d;
	uint8_t field299_0x22e;
	uint8_t field300_0x22f;
	uint8_t field301_0x230;
	uint8_t field302_0x231;
	uint8_t field303_0x232;
	uint8_t field304_0x233;
	uint8_t field305_0x234;
	uint8_t field306_0x235;
	uint8_t field307_0x236;
	uint8_t field308_0x237;
	uint8_t field309_0x238;
	uint8_t field310_0x239;
	uint8_t field311_0x23a;
	uint8_t field312_0x23b;
	uint8_t field313_0x23c;
	uint8_t field314_0x23d;
	uint8_t field315_0x23e;
	uint8_t field316_0x23f;
	uint8_t field317_0x240;
	uint8_t field318_0x241;
	uint8_t field319_0x242;
	uint8_t field320_0x243;
	uint8_t field321_0x244;
	uint8_t field322_0x245;
	uint8_t field323_0x246;
	uint8_t field324_0x247;
	uint8_t field325_0x248;
	uint8_t field326_0x249;
	uint8_t field327_0x24a;
	uint8_t field328_0x24b;
	uint8_t field329_0x24c;
	uint8_t field330_0x24d;
	uint8_t field331_0x24e;
	uint8_t field332_0x24f;
	uint8_t field333_0x250;
	uint8_t field334_0x251;
	uint8_t field335_0x252;
	uint8_t field336_0x253;
	uint8_t field337_0x254;
	uint8_t field338_0x255;
	uint8_t field339_0x256;
	uint8_t field340_0x257;
	uint8_t field341_0x258;
	uint8_t field342_0x259;
	uint8_t field343_0x25a;
	uint8_t field344_0x25b;
	uint8_t field345_0x25c;
	uint8_t field346_0x25d;
	uint8_t field347_0x25e;
	uint8_t field348_0x25f;
	uint8_t field349_0x260;
	uint8_t field350_0x261;
	uint8_t field351_0x262;
	uint8_t field352_0x263;
	uint8_t field353_0x264;
	uint8_t field354_0x265;
	uint8_t field355_0x266;
	uint8_t field356_0x267;
	uint8_t field357_0x268;
	uint8_t field358_0x269;
	uint8_t field359_0x26a;
	uint8_t field360_0x26b;
	uint8_t field361_0x26c;
	uint8_t field362_0x26d;
	uint8_t field363_0x26e;
	uint8_t field364_0x26f;
	uint8_t field365_0x270;
	uint8_t field366_0x271;
	uint8_t field367_0x272;
	uint8_t field368_0x273;
	uint8_t field369_0x274;
	uint8_t field370_0x275;
	uint8_t field371_0x276;
	uint8_t field372_0x277;
	uint8_t field373_0x278;
	uint8_t field374_0x279;
	uint8_t field375_0x27a;
	uint8_t field376_0x27b;
	uint8_t field377_0x27c;
	uint8_t field378_0x27d;
	uint8_t field379_0x27e;
	uint8_t field380_0x27f;
	uint8_t field381_0x280;
	uint8_t field382_0x281;
	uint8_t field383_0x282;
	uint8_t field384_0x283;
	uint8_t field385_0x284;
	uint8_t field386_0x285;
	uint8_t field387_0x286;
	uint8_t field388_0x287;
	uint8_t field389_0x288;
	uint8_t field390_0x289;
	uint8_t field391_0x28a;
	uint8_t field392_0x28b;
	uint8_t field393_0x28c;
	uint8_t field394_0x28d;
	uint8_t field395_0x28e;
	uint8_t field396_0x28f;
	uint8_t field397_0x290;
	uint8_t field398_0x291;
	uint8_t field399_0x292;
	uint8_t field400_0x293;
	uint8_t field401_0x294;
	uint8_t field402_0x295;
	uint8_t field403_0x296;
	uint8_t field404_0x297;
	uint8_t field405_0x298;
	uint8_t field406_0x299;
	uint8_t field407_0x29a;
	uint8_t field408_0x29b;
	uint8_t field409_0x29c;
	uint8_t field410_0x29d;
	uint8_t field411_0x29e;
	uint8_t field412_0x29f;
	uint8_t field413_0x2a0;
	uint8_t field414_0x2a1;
	uint8_t field415_0x2a2;
	uint8_t field416_0x2a3;
	uint8_t field417_0x2a4;
	uint8_t field418_0x2a5;
	uint8_t field419_0x2a6;
	uint8_t field420_0x2a7;
	uint32_t *field421_0x2a8;
	uint32_t *field422_0x2ac;
	uint32_t field423_0x2b0;
	uint8_t field424_0x2b4;
	uint8_t field425_0x2b5;
	uint8_t field426_0x2b6;
	uint8_t field427_0x2b7;
	int infrastructure;
	CStaticModifier staticModifier;
	uint8_t field430_0x308;
	uint8_t field431_0x309;
	uint8_t field432_0x30a;
	uint8_t field433_0x30b;
	uint32_t *field434_0x30c;
	uint32_t *field435_0x310;
	uint32_t field436_0x314;
	uint8_t field437_0x318;
	uint8_t field438_0x319;
	uint8_t field439_0x31a;
	uint8_t field440_0x31b;
	uint8_t field441_0x31c;
	uint8_t field442_0x31d;
	uint8_t field443_0x31e;
	uint8_t field444_0x31f;
	CCrime * crime;
	uint8_t field446_0x324;
	uint8_t field447_0x325;
	uint8_t field448_0x326;
	uint8_t field449_0x327;
	CFlags flags;
	CEU3Date lastImmigrationDate__;
	CEU3Date lastControllerChangeDate;
	CUniqueUnitName unitNames__;
	uint32_t field454_0x374;
	uint32_t field455_0x378;
	uint32_t field456_0x37c;
	uint8_t field457_0x380;
	uint8_t field458_0x381;
	uint8_t field459_0x382;
	uint8_t field460_0x383;
	vector<CEvent *> delayedEventQueue;
	uint8_t field462_0x394;
	uint8_t field463_0x395;
	uint8_t field464_0x396;
	uint8_t field465_0x397;
};

}
}

#pragma pack(pop)

#endif // HANDLES_CPROVINCE_HPP_
